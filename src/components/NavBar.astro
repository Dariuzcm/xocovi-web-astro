---
import MenuIcon from "./Icons/MenuIcon.astro";
---

<nav class="w-full z-10 navbar h-16 bg-white show hidden md:block items-center">
  <div class="flex">
    <img src="/xocovi-nav-icon.png" alt="" class="h-16 -top-0" />
    <ul
      id="navList"
      class="flex justify-between gap-10 text-2xl font-semibold h-16 p-3 right-10 absolute"
    >
      <li id="li-inicio">
        <a href='#inicio'>Inicio</a>
      </li>
      <li id="li-producto">
        <a href='#producto'>Producto</a>
      </li>
      <li id="li-ingredients">
        <a href='#ingredients'>Ingredientes</a>
      </li>
      <li id="li-clients">
        <a href='#clients'>Clientes</a>
      </li>
      <li id="li-contacto">
        <a href='#contacto'>Contacto</a>
      </li>
      <li id="li-puntos-venta">
        <a href='#puntos-venta'>Puntos de venta</a>
      </li>
    </ul>
  </div>
</nav>
<nav class="navbar h-14 show w-full bg-white">
  <div class="flex justify-between items-center">
    <button id="menu-icon">
      <MenuIcon />
    </button>
    <img src="/xocovi-nav-icon.png" alt="" class="h-14 -top-0" />
  </div>
</nav>
<dialog id="menu-dialog" open={false} class="bg-white w-full h-full opacity-90 top-14 fixed z-10">

</dialog>
<script>
  const menuButton = document.getElementById('menu-icon')
  menuButton?.addEventListener('click', toggleMenu)
  const menuDialog = document.getElementById('menu-dialog') as astroHTML.JSX.DialogHTMLAttributes | null
  function toggleMenu(){
    if(menuDialog){
    const isOpen = menuDialog?.open
    menuDialog.open = !isOpen
  }
  }
</script>

<script>
  window.addEventListener("scroll", function () {
    const element = document.elementFromPoint(
      window.innerWidth / 2,
      window.innerHeight / 2
    );

    if (element) {
      const searchParent = searchParentSection(element)
      changeColorNavbar(searchParent?.id);
    }
  });

  function searchParentSection(element: Element ) {
    const { parentElement } = element
    if(!parentElement) return undefined
    if(parentElement.tagName === "SECTION"){
      return parentElement
    }
    else {
      return searchParentSection(parentElement)
    }
  }
  function changeColorNavbar(sectionid: string | undefined) {
    if(!sectionid) return;

    const selected = document.querySelector(`li[id='li-${sectionid}']`);
    const previousSelected = document.querySelector("li.active");

    previousSelected?.classList.remove("active");
    selected?.classList.add("active");
  }


</script>

<style>
  .navbar {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    transition:
      transform 0.3s ease-in-out,
      color 0.3s ease-in-out;
    transform: translateY(-100%);
  }
  .active {
    color: #ba007c;
  }

  li {
    transition: color 0.3s ease-in-out;
  }
  li :hover {
    color: #ff3bbe;
    transition: color 0.3s ease-in-out;
  }
  .navbar.show {
    transform: translateY(0);
  }
  html {
  scroll-behavior: smooth;
}
</style>
